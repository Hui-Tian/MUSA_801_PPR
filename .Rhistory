plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(family = 'font', colour = "black", face = "italic", size = 9),
legend.text = element_text(family = 'font', colour = "black", face = "italic", size = 7),
strip.text.x = element_text(family = 'font', size = 9),
legend.key.size = unit(.5, 'line')
)
}
mapTheme <- function(base_size = 9, title_size = 10){
theme(
text = element_text(family = 'font', color = "black"),
plot.title = element_text(family = 'font',
size = title_size, colour = "black", hjust = 0.5),
plot.subtitle = element_text(family = 'font', face = 'italic',
size = base_size, colour = "black", hjust = 0.5),
plot.caption = element_text(family = 'font', hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size=base_size),
axis.title = element_text(family = 'font', size=9),
axis.text = element_blank(),
axis.text.y = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(family = 'font', colour = "black", face = "italic", size = 9),
legend.text = element_text(family = 'font', colour = "black", face = "italic", size = 7),
strip.text.x = element_text(size=base_size),
legend.key.size = unit(.5, 'line')
)
}
palette5 <- c("#f9b294","#f2727f","#c06c86","#6d5c7e","#315d7f")
palette4 <- c("#f9b294","#f2727f","#c06c86","#6d5c7e")
palette2 <- c("#f9b294","#f2727f")
palette1_main <- "#F2727F"
palette1_assist <- '#F9B294'
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT * FROM ppr_tree_canopy_outlines_2015 DROP COLUMN the_geom')%>%
st_transform(crs)
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT objectid,avg_height,shape_area FROM ppr_tree_canopy_outlines_2015')%>%
st_transform(crs)
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT objectid, avg_height, shape_area FROM ppr_tree_canopy_outlines_2015')%>%
st_transform(crs)
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT * FROM ppr_tree_canopy_outlines_2015
')%>%
st_transform(crs)
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT * FROM ppr_tree_canopy_outlines_2015')%>%
st_transform(crs)
pprTreeCanopy <- curl('https://phl.carto.com/api/v2/sql?q=SELECT * FROM ppr_tree_canopy_outlines_2015')%>%
st_transform(crs)
library(curl)
pprTreeCanopy <- curl('https://phl.carto.com/api/v2/sql?q=SELECT * FROM ppr_tree_canopy_outlines_2015')%>%
st_transform(crs)
pprTreeCanopy <- curl('https://phl.carto.com/api/v2/sql?q=SELECT * FROM ppr_tree_canopy_outlines_2015')
library(jsonlite)
library(httr)
pprTreeCanopy <- GET('https://phl.carto.com/api/v2/sql?q=SELECT * FROM ppr_tree_canopy_outlines_2015')
View(pprTreeCanopy)
remotes::install_github("CityOfPhiladelphia/rphl")
?get_carto
library(rphl)
?get_carto
query <- paste("SELECT objectid, avg_height, shape_area",
"FROM ppr_tree_canopy_outlines_2015")
get_carto(query, format = "csv",
base_url = "https://phl.carto.com/api/v2/sql", stringsAsFactors = F)
query <- paste("SELECT objectid, avg_height, shape_area",
"FROM ppr_tree_canopy_outlines_2015",
"ORDER BY objectid DESC")
get_carto(query, format = "csv",
base_url = "https://phl.carto.com/api/v2/sql", stringsAsFactors = F)
query <- paste("SELECT objectid, avg_height, shape_area",
"FROM ppr_tree_canopy_outlines_2015",
"ORDER BY objectid ASCN")
get_carto(query, format = "csv",
base_url = "https://phl.carto.com/api/v2/sql", stringsAsFactors = F)
query <- paste("SELECT objectid, avg_height, shape_area",
"FROM ppr_tree_canopy_outlines_2015",
"ORDER BY objectid ASC")
get_carto(query, format = "csv",
base_url = "https://phl.carto.com/api/v2/sql", stringsAsFactors = F)
pprTreeCanopy1 <- st_read(' https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)
pprTreeCanopy1 <- st_read(' https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)
pprTreeCanopy1 <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)
View(pprTreeCanopy1)
?left_join
pprTreeCanopy1 <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)%>%
left_join(pprTreeCanopy2,by = "objectid")
pprTreeCanopy2 <- get_carto(query, format = "csv",
base_url = "https://phl.carto.com/api/v2/sql", stringsAsFactors = F)
pprTreeCanopy1 <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)%>%
left_join(pprTreeCanopy2,by = "objectid")
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,size=shape_area,fill = palette1_main,inherit.aes = FALSE)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent",inherit.aes = FALSE)+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent",inherit.aes = FALSE)+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)%>%
left_join(pprTreeCanopyWithArea,by = "objectid")
pprTreeCanopyWithArea <- get_carto(query, format = "csv",
base_url = "https://phl.carto.com/api/v2/sql", stringsAsFactors = F)
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)%>%
left_join(pprTreeCanopyWithArea,by = "objectid")
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,size=shape_area,fill = palette1_main,inherit.aes = FALSE)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent",inherit.aes = FALSE)+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent",inherit.aes = FALSE)+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')
pprTennisCourt <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tennis_courts&filename=ppr_tennis_courts&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)
View(pprTennisCourt)
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)
View(pprTreeCanopy)
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)%>%
left_join(pprTreeCanopyWithArea,by = "objectid")
View(pprTreeCanopy)
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,size=shape_area,fill = palette1_main,inherit.aes = FALSE)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent",inherit.aes = FALSE)+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent",inherit.aes = FALSE)+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,size="shape_area",fill = palette1_main,inherit.aes = FALSE)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent",inherit.aes = FALSE)+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent",inherit.aes = FALSE)+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,size="shape_area",fill = palette1_main,inherit.aes = FALSE)
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,size=shape_area,fill = palette1_main,inherit.aes = FALSE)
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,fill = palette1_main,inherit.aes = FALSE)
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,size=aes(shape_area),fill = palette1_main,inherit.aes = FALSE)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent",inherit.aes = FALSE)+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent",inherit.aes = FALSE)+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,size=aes(shape_area),fill = palette1_main,inherit.aes = FALSE)
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,aes(size=shape_area),fill = palette1_main,inherit.aes = FALSE)
pprDistrict <- st_read('https://opendata.arcgis.com/datasets/0cdc4a1e86c6463b9600f9d9fca39875_0.geojson') %>%
st_transform(crs)
base_map <- get_map(location = unname(st_bbox(ll(st_buffer(st_union(pprDistrict),11000)))),maptype = "terrian")
ggmap(base_map) +
geom_sf(data=ll(st_union(pprDistrict)),color="black",size=2,fill = "transparent")+
geom_sf(data=ll(pprDistrict),color=palette1_main,size=2,fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
ggmap(base_map) +
geom_sf(data=ll(st_union(pprDistrict)),color="black",size=2,fill = "transparent",inherit.aes = FALSE)+
geom_sf(data=ll(pprDistrict),color=palette1_main,size=2,fill = "transparent",inherit.aes = FALSE)+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,aes(size=shape_area),fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprPermittableSpace <- st_read('https://opendata.arcgis.com/datasets/811b67c999bd4e839abb68b16c16f623_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprPermittableSpace,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
View(pprPermittableSpace)
knitr::opts_chunk$set(echo = TRUE)
library(vroom)
library(sf)
library(ggplot2)
library(ggmap)
library(kableExtra)
library(tidyverse)
library(data.table)
#remotes::install_github("CityOfPhiladelphia/rphl")
library(rphl)
ll <- function(dat, proj4 = 4326){st_transform(dat, proj4)}
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
windowsFonts(font = windowsFont('Helvetica'))
crs = 'EPSG:2272'
plotTheme <- function(base_size = 9, title_size = 10){
theme(
text = element_text(family = 'font', color = "black"),
plot.title = element_text(family = 'font',
size = title_size, colour = "black", hjust = 0.5),
plot.subtitle = element_text(family = 'font', face = 'italic',
size = base_size, colour = "black", hjust = 0.5),
plot.caption = element_text(family = 'font', hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_line("grey80", size = 0.01),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
strip.background = element_blank(),
strip.text = element_text(family = 'font', size=9),
axis.title = element_text(family = 'font', size=9),
axis.text = element_text(family = 'font', size=7),
axis.text.y = element_text(family = 'font', size=7),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(family = 'font', colour = "black", face = "italic", size = 9),
legend.text = element_text(family = 'font', colour = "black", face = "italic", size = 7),
strip.text.x = element_text(family = 'font', size = 9),
legend.key.size = unit(.5, 'line')
)
}
mapTheme <- function(base_size = 9, title_size = 10){
theme(
text = element_text(family = 'font', color = "black"),
plot.title = element_text(family = 'font',
size = title_size, colour = "black", hjust = 0.5),
plot.subtitle = element_text(family = 'font', face = 'italic',
size = base_size, colour = "black", hjust = 0.5),
plot.caption = element_text(family = 'font', hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size=base_size),
axis.title = element_text(family = 'font', size=9),
axis.text = element_blank(),
axis.text.y = element_blank(),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(family = 'font', colour = "black", face = "italic", size = 9),
legend.text = element_text(family = 'font', colour = "black", face = "italic", size = 7),
strip.text.x = element_text(size=base_size),
legend.key.size = unit(.5, 'line')
)
}
palette5 <- c("#f9b294","#f2727f","#c06c86","#6d5c7e","#315d7f")
palette4 <- c("#f9b294","#f2727f","#c06c86","#6d5c7e")
palette2 <- c("#f9b294","#f2727f")
palette1_main <- "#F2727F"
palette1_assist <- '#F9B294'
moves2018 <- vroom("data/OneDrive-2021-12-07/moves_2018.csv")
colnames(moves2018)
moves_monthly2020 <- vroom("data/OneDrive-2021-12-07/moves_monthly2020.csv")
colnames(moves_monthly2020)
brand_info <- vroom("data/safegraph/Philadelphia-Camden-WilmingtonPA-NJ-DE-MDMSA-CORE_POI-2021_11-2021-12-17/brand_info.csv")
colnames(brand_info)
kable(head(brand_info,3),align = 'c',caption = '<center>Table 1. brand_info of SafeGraph data <center/>')%>%
kable_classic(full_width = F)%>%
kable_styling(position = "center")%>%
scroll_box(width = "100%", height = "400px")
core_poi <- vroom("data/safegraph/Philadelphia-Camden-WilmingtonPA-NJ-DE-MDMSA-CORE_POI-2021_11-2021-12-17/core_poi.csv")
colnames(core_poi)
kable(head(core_poi,3),align = 'c',caption = '<center>Table 2. core_poi of SafeGraph data <center/>')%>%
kable_classic(full_width = F)%>%
kable_styling(position = "center")%>%
scroll_box(width = "100%", height = "400px")
#HPS = home_panel_summary
#NS = normalization_stats
#VPS = visit_panel_summary
monthList = c("01","02","03","04","05","06","07","08","09","10","11")
# home_panel_summary
hpsAllMonth = data.frame()
for (i in monthList){
currentMonth = vroom(paste("data/safegraph/SafeGraph Data Purchase Dec-16-2021/Philadelphia-Camden-WilmingtonPA-NJ-DE-MDMSA-PATTERNS-2021_",
i,
"-2021-12-17/home_panel_summary.csv",sep = ""))%>%
filter(region=="pa")
hpsAllMonth = rbind(hpsAllMonth,currentMonth)
#print(paste("Current input home_panel_summary dataframe is in ",i," month",sep = ""))
}
kable(head(hpsAllMonth,3),align = 'c',caption = '<center>Table 3. home pannel summary of 2021 whole year in SafeGraph data <center/>')%>%
kable_classic(full_width = F)%>%
kable_styling(position = "center")%>%
scroll_box(width = "100%", height = "400px")
# normalization_Stats
nsAllMonth = data.frame()
for (i in monthList){
currentMonth = vroom(paste("data/safegraph/SafeGraph Data Purchase Dec-16-2021/Philadelphia-Camden-WilmingtonPA-NJ-DE-MDMSA-PATTERNS-2021_",
i,
"-2021-12-17/normalization_stats.csv",sep = ""))%>%
filter(region=="pa")
nsAllMonth = rbind(nsAllMonth,currentMonth)
#print(paste("Current input normalization_stats dataframe is in ",i," month",sep = ""))
}
kable(head(nsAllMonth,3),align = 'c',caption = '<center>Table 4. normalization stats of 2021 whole year in SafeGraph data <center/>')%>%
kable_classic(full_width = F)%>%
kable_styling(position = "center")%>%
scroll_box(width = "100%", height = "400px")
# visit_panel_summary
vpsAllMonth = data.frame()
for (i in monthList){
currentMonth = vroom(paste("data/safegraph/SafeGraph Data Purchase Dec-16-2021/Philadelphia-Camden-WilmingtonPA-NJ-DE-MDMSA-PATTERNS-2021_",
i,
"-2021-12-17/visit_panel_summary.csv",sep = ""))%>%
filter(region=="pa")
vpsAllMonth = rbind(vpsAllMonth,currentMonth)
#print(paste("Current input visit_panel_summary dataframe is in ",i," month",sep = ""))
}
kable(head(vpsAllMonth,3),align = 'c',caption = '<center>Table 5. visit panel summary of 2021 whole year in SafeGraph data <center/>')%>%
kable_classic(full_width = F)%>%
kable_styling(position = "center")%>%
scroll_box(width = "100%", height = "400px")
# Pattern
patternAllMonth = data.frame()
for (i in monthList){
currentMonth = vroom(paste("data/safegraph/SafeGraph Data Purchase Dec-16-2021/Philadelphia-Camden-WilmingtonPA-NJ-DE-MDMSA-PATTERNS-2021_",
i,
"-2021-12-17/patterns.csv.gz",sep = ""))%>%
filter(region=="PA")%>%
mutate(month=paste(i,sep = ""))
patternAllMonth = rbind(patternAllMonth,currentMonth)
#print(paste("Current input patterns dataframe is in ",i," month",sep = ""))
}
kable(head(patternAllMonth,3),align = 'c',caption = '<center>Table 6. patterns of 2021 whole year in SafeGraph data <center/>')%>%
kable_classic(full_width = F)%>%
kable_styling(position = "center")%>%
scroll_box(width = "100%", height = "400px")
pprDistrict <- st_read('https://opendata.arcgis.com/datasets/0cdc4a1e86c6463b9600f9d9fca39875_0.geojson') %>%
st_transform(crs)
base_map <- get_map(location = unname(st_bbox(ll(st_buffer(st_union(pprDistrict),11000)))),maptype = "terrian")
ggmap(base_map) +
geom_sf(data=ll(st_union(pprDistrict)),color="black",size=2,fill = "transparent",inherit.aes = FALSE)+
geom_sf(data=ll(pprDistrict),color=palette1_main,size=2,fill = "transparent",inherit.aes = FALSE)+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprProperties <- st_read('https://opendata.arcgis.com/datasets/d52445160ab14380a673e5849203eb64_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprProperties,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprTrails <- st_read('https://opendata.arcgis.com/datasets/48323d574068405bbf5336b9b5b29455_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprTrails,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprOutPrograms <- st_read('https://opendata.arcgis.com/datasets/1f5d8108e06d457783538d4b7808c246_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprOutPrograms,color=palette1_main,size=8,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprPicnicSites <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_picnic_sites&filename=ppr_picnic_sites&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprPicnicSites,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprAdExercise <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_adult_exercise_equipment&filename=ppr_adult_exercise_equipment&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprAdExercise,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprSwimmingPool <- st_read('https://opendata.arcgis.com/datasets/c6f6176968f04d3f88adbc4c362af55d_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprSwimmingPool,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprTennisCourt <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tennis_courts&filename=ppr_tennis_courts&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprTennisCourt,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprSpraygrounds <- st_read('https://opendata.arcgis.com/datasets/a148cc904d374b22bd456e44a044d554_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprSpraygrounds,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprHydrationStations <- st_read('https://opendata.arcgis.com/datasets/cc35dc98180249fb9a6f2f5f06657df1_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprHydrationStations,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprPlaygrounds <- st_read('https://opendata.arcgis.com/datasets/899c807e205244278b3f39421be8489c_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprPlaygrounds,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprBoatLaunches <- st_read('https://opendata.arcgis.com/api/v3/datasets/ba32e1ac9c5341e1916274c2df3fbe22_0/downloads/data?format=geojson&spatialRefId=4326')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprBoatLaunches,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprBuildingStructures <- st_read('https://opendata.arcgis.com/datasets/97e90a049a35453ba0c51f974b3c77b4_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprBuildingStructures,color=palette1_main,size=1,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
query <- paste("SELECT objectid, avg_height, shape_area",
"FROM ppr_tree_canopy_outlines_2015",
"ORDER BY objectid ASC")
pprTreeCanopyWithArea <- get_carto(query, format = "csv",
base_url = "https://phl.carto.com/api/v2/sql", stringsAsFactors = F)
pprTreeCanopy <- st_read('https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+ppr_tree_canopy_points_2015&filename=ppr_tree_canopy_points_2015&format=geojson&skipfields=cartodb_id')%>%
st_transform(crs)%>%
left_join(pprTreeCanopyWithArea,by = "objectid")
ggplot() +
geom_sf(data=pprTreeCanopy,color=palette1_main,aes(size=shape_area),fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
pprPermittableSpace <- st_read('https://opendata.arcgis.com/datasets/811b67c999bd4e839abb68b16c16f623_0.geojson')%>%
st_transform(crs)
ggplot() +
geom_sf(data=pprPermittableSpace,color=palette1_main,fill = palette1_main)+
geom_sf(data=st_union(pprDistrict),color="black",size=2,fill = "transparent")+
geom_sf(data=pprDistrict,color="black",size=1,linetype ="dashed",fill = "transparent")+
labs(title = "",
subtitle = "",
x="",y="")+
mapTheme()
save.image("D:/OneDrive/WORK/Upenn/Spring_MUSA_801_Practicum/MUSA_801_PPR/workspace.RData")
